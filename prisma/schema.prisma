generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  profiles      Profile[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Profile {
  id         String  @id @default(cuid())
  bio        String?
  title      String?
  location   String?
  slug       String  @unique
  userId     String
  user       User    @relation(fields: [userId], references: [id])
  profilePic String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  link Link[]
}

model Link {
  id        String  @id @default(cuid())
  title     String
  url       String
  order     Int
  profileId String
  profile   Profile @relation(fields: [profileId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
